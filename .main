from PIL import Image
import os

def encrypt_image(input_path, output_path, key):
    image = Image.open(input_path)
    pixels = image.load()
    
    width, height = image.size
    
    for x in range(width):
        for y in range(height):
            r, g, b = pixels[x, y]
            # XOR each channel with the key
            pixels[x, y] = (r ^ key, g ^ key, b ^ key)

    image.save(output_path)
    print(f"Encrypted image saved as {output_path}")

def decrypt_image(input_path, output_path, key):
    # Same as encryption since XOR is symmetric
    encrypt_image(input_path, output_path, key)

def main():
    print("=== Image Encryption Tool ===")
    choice = input("Do you want to (E)ncrypt or (D)ecrypt an image?: ").strip().lower()
    input_path = input("Enter input image path: ").strip()
    output_path = input("Enter output image path: ").strip()
    
    if not os.path.exists(input_path):
        print("Error: Input file does not exist.")
        return

    try:
        key = int(input("Enter an encryption key (0-255): "))
        if not (0 <= key <= 255):
            raise ValueError
    except ValueError:
        print("Key must be an integer between 0 and 255.")
        return

    if choice == 'e':
        encrypt_image(input_path, output_path, key)
    elif choice == 'd':
        decrypt_image(input_path, output_path, key)
    else:
        print("Invalid choice. Use 'E' or 'D'.")

if __name__ == "__main__":
    main()
